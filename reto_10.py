"""
춰Vaya idea ha tenido Sam Elfman! Quiere ofrecer un servicio que te crea un 치rbol de Navidad 游꾻 personalizado en cuesti칩n de segundos.

Para crearlo nos pasan una cadena de caracteres para formar el 치rbol y un n칰mero que indica la altura del mismo.

Cada car치cter de la cadena representa un adorno del 치rbol, y vamos utiliz치ndolos de forma c칤clica hasta llegar a la altura indicada. Como m칤nimo siempre nos pasar치n uno.

Debemos devolver un string multil칤nea con el 치rbol de Navidad formado con los adornos, la altura indicada m치s una 칰ltima l칤nea con el tronco formado por el car치cter | en el centro y, finalmente, un salto de l칤nea \n.

Por ejemplo si recibimos la cadena "123" y el n칰mero 4 como altura, tendr칤amos que construir este 치rbol:

   1
  2 3
 1 2 3
1 2 3 1
   |
Si recibimos la cadena *@o y el n칰mero 3, el 치rbol que debemos devolver es:

  *
 @ o
* @ o
  |
Nota:

El 치rbol siempre debe estar centrado, para ello a침ade espacios en blanco a la izquierda de cada l칤nea.
Crea espacios s칩lo a la izquierda de cada l칤nea del 치rbol. No dejes espacios en blanco a la derecha.
Los adornos tienen un espacio en blanco entre ellos de separaci칩n.
Si te fallan los tests y visualmente parece que el 치rbol est치 bien, comprueba que no haya espacios en blanco que sobren, especialmente a la derecha de cada l칤nea.

"""


def create_christmas_tree(ornaments:str, height:int):
    result = ''
    espacio = height  - 1
    ancho = 1
    adorno = 0
    for _ in range(1, height + 1):
        result += ' ' * espacio

        for j in range(ancho):      
            if j + 1  == ancho:
                result += ornaments[adorno]
                adorno += 1
                
                if adorno == len(ornaments):
                     adorno = 0
                
                continue

            result += ornaments[adorno]
            result += ' '
            adorno += 1
            
            if adorno == len(ornaments):
                adorno = 0
                
        espacio -= 1
        ancho += 1
        result += '\n'
        
    
    result += ' ' * (height - 1 )
    result += '|'
    
    
    return result


if __name__ == '__main__':
    cadena = '*@o'
    altura = 8
    result = create_christmas_tree(cadena, altura)
    print(result)